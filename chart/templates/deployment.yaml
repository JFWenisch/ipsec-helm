{{- $secretname := (printf "%s-vpnconfig" (include "ipsec-vpn-server.fullname" .)) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "ipsec-vpn-server.fullname" . }}-vpn-server
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "ipsec-vpn-server.fullname" . }}-vpn-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "ipsec-vpn-server.fullname" . }}-vpn-server
    spec:
      hostNetwork: {{ .Values.hostNetwork }}
      initContainers:
        - name: init-config
          image: "{{ .Values.initContainer.image.repository }}:{{ .Values.initContainer.image.tag }}"
          command: ["sh", "-c"]
          args: ["/vpn/scripts/create-env.sh"]
          env:
            - name: VPN_CONFIGBUILDER_DNSNAME
              value: {{ .Values.vpn.dns_name }}
            - name: VPN_CONFIGBUILDER_PSK
              valueFrom:
                secretKeyRef:
                  name: {{ $secretname }}
                  key: psk
{{- range .Values.users }}
            - name: VPN_CONFIGBUILDER_PASSWORD_{{ .username }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secretname }}
                  key: password_{{ .username }}
{{- end }}
          volumeMounts:
            - mountPath: /vpn
              name: vpn-config
            - mountPath: /vpn/scripts
              name: vpn-script
              readOnly: true
      containers:
        - name: vpn-server
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
             {{- if .Values.vpn.dns_srv1 }}
            - name: VPN_DNS_SRV1
              value: {{ .Values.vpn.dns_srv1 }}
              {{- end }}
              {{- if .Values.vpn.dns_srv2 }}
            - name: VPN_DNS_SRV2
              value: {{ .Values.vpn.dns_srv2 }}
              {{- end }}
          securityContext:
            privileged: true
          ports:
            - name: {{ .Values.service.ports.isakmp.name }}
              containerPort: {{ .Values.service.ports.isakmp.port }}
              protocol: UDP
            - name: {{ .Values.service.ports.ike.name }}
              containerPort: {{ .Values.service.ports.ike.port }}
              protocol: UDP
          volumeMounts:
            - mountPath: /opt/src/env/
              name: vpn-config
            - mountPath: /etc/ipsec.d/
              name: ipsec-data

      volumes:
        - name: vpn-config
          emptyDir: {}
        - name: vpn-script
          configMap:
            name: {{ include "ipsec-vpn-server.fullname" . }}-vpnscript
            defaultMode: 0777
        - name: ipsec-data
          persistentVolumeClaim:
            claimName: {{ include "ipsec-vpn-server.fullname" . }}-data
